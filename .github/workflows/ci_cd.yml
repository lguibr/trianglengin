
name: Triangle Engine CI/CD

on:
  push:
    branches: [ "main" ] # Or your primary branch name
    tags: [ "v*" ] # Trigger on version tags like v0.1.0
  pull_request:
    branches: [ "main" ] # Or your primary branch name

permissions:
  contents: read # Allow reading content for checkout
  id-token: write # Allow writing OIDC token for PyPI

jobs:
  check_lint_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"] # Test against supported Python versions

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Install library in editable mode with dev dependencies
        pip install -e .[dev]

    - name: Lint with Ruff
      run: |
        ruff check .

    - name: Check formatting with Ruff
      run: |
        ruff format --check .

    - name: Type check with MyPy
      run: |
        mypy trianglengin/

    - name: Test with Pytest and Generate Coverage Report
      run: |
        # Generate coverage.xml needed by codecov uploader
        pytest --cov=trianglengin --cov-report=xml

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        slug: lguibr/trianglengin

  publish:
    name: Publish to PyPI
    needs: [check_lint_test] # Run only if checks pass
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') # Run only on version tags

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.10" # Use a specific version for building

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build

    - name: Build package
      run: python -m build

    - name: Publish package distributions to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1